#########################################################################
# Title:         Cloudbox: RadarrSync4K Role                            #
# Author(s):     Desimaniac                                             #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.rocks          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Create RadarrSync4K directories
  file: "path={{item}} state=directory owner={{user}} group={{user}} recurse=yes"
  with_items:
    - "/opt/radarrsync4k"

- name: Clone RadarrSync
  git:
    repo: "https://github.com/EnorMOZ/RadarrSync/"
    dest: "/opt/radarrsync4k"
    version: master
    force: yes
  become: yes
  become_user: "{{user}}"

- name: Check config exists
  stat:
    path: "/opt/radarrsync4k/config.txt"
  register: radarrsync4k_config

- name: "Check if radarr exists"
  stat:
    path: "/opt/radarr/app/config.xml"
  register: radarr_config
  when: not radarrsync_config.stat.exists

- name: "When radarr exists, add api key to radarrsync config"
  block:

  - name: Pull radarr api key
    xml:
      path: "/opt/radarr/app/config.xml"
      xpath: /Config/ApiKey
      content: text
    register: xmlapi

  - name: Pull radarr port
    xml:
      path: "/opt/radarr/app/config.xml"
      xpath: /Config/Port
      content: text
    register: xmlport

  - name: Set radarr facts
    set_fact:
      radarr_api_key: "{{ xmlapi.matches[0].ApiKey }}"
      radarr_profile: "Any"
      radarr_port: "{{ xmlport.matches[0].Port }}"
      radarr_root: "Poor Quality"

  when: (not radarrsync4k_config.stat.exists) and (radarr4k_config.stat.exists)

- name: "Check if radarr4k exists"
  stat:
    path: "/opt/radarr4k/app/config.xml"
  register: radarr4k_config
  when: not radarr4ksync_config.stat.exists

- name: "When radarr4k exists, add api key to radarrsync4k config"
  block:

  - name: Pull radarr4k api key
    xml:
      path: "/opt/radarr4k/app/config.xml"
      xpath: /Config/ApiKey
      content: text
    register: xmlapi

  - name: Pull radarr4k port
    xml:
      path: "/opt/radarr4k/app/config.xml"
      xpath: /Config/Port
      content: text
    register: xmlport

  - name: Set radarr4k facts
    set_fact:
      radarr4k_api_key: "{{ xmlapi.matches[0].ApiKey }}"
      radarr4k_profile: "HD-1080p"
      radarr4k_port: "{{ xmlport.matches[0].Port }}"
      radarr4k_root: "YIFY"

  when: (not radarrsync4k_config.stat.exists) and (radarr4k_config.stat.exists)

- name: Import default config
  template:
    src: "config.json.js2"
    dest: "/opt/radarrsync4k/config.default"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    force: yes
  when: not radarrsync4k_config.stat.exists

- name: Set RadarrSync.py as executable
  file:
    path: /opt/radarrsync4k/RadarrSync.py
    owner: "{{user}}"
    group: "{{user}}"
    mode: a+x

- name: Set directory permissions
  file: "path=/opt/radarrsync4k state=directory owner={{user}} group={{user}} recurse=yes"

- name: "Create /usr/local/bin symlink"
  file:
    src: "/opt/radarrsync4k/RadarrSync.py"
    dest: "/usr/local/bin/radarrsync4k"
    state: link

- name: Import radarrsync4k scripts
  template:
    src: "{{item}}"
    dest: "/opt/scripts/system/{{item}}"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    force: yes
  with_items:
    - "slack_radarrsync4k.sh"
    - "radarrsync4k-report.sh"

- name: "Schedule cron task for daily update."
  cron:
    name: "RadarrSync4K"
    user: "{{user}}"
    job: "/opt/scripts/radarrsync/radarrsync4k_report.sh"
    special_time: daily
    state: present