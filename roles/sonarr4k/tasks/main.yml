#########################################################################
# Title:         Cloudbox: Sonarr4K Role                                #
# Author(s):     Desimaniac                                             #
# URL:           https://github.com/cloudbox/cloudbox                   #
# Docker Image:  hotio/suitarr                                          #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.rocks          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare
  vars:
    subdomain: sonarr4k

- name: "Get user UID and GID"
  include_role:
    name: user

- name: Stop and remove any existing container
  docker_container:
    name: sonarr4k
    state: absent

# START - Suitarr Migration Tasks
- name: Check folder exists
  stat:
    path: /opt/sonarr4k
  register: folder

- name: Check subfolder1 exists
  stat:
    path: /opt/sonarr4k/Sonarr
  register: subfolder1

- name: Check subfolder2 exists
  stat:
    path: /opt/sonarr4k/app
  register: subfolder2

- name: Move 'sonarr4k' folder contents to 'app' subfolder
  shell: |
    mv /opt/sonarr4k /tmp/app
    mkdir /opt/sonarr4k
    mv /tmp/app /opt/sonarr4k/
    find /opt/sonarr4k/* -type d -empty -delete
    chown -R {{user}}:{{user}} /opt/sonarr4k
  when: (folder.stat.exists) and not (subfolder1.stat.exists or subfolder2.stat.exists)

- name: Move 'Sonarr' subfolder to 'app' subfolder
  shell: |
    mv /opt/sonarr4k/Sonarr /opt/sonarr4k/app
    chown -R {{user}}:{{user}} /opt/sonarr4k
  when: (folder.stat.exists) and (subfolder1.stat.exists) and (not subfolder2.stat.exists)
# END - Suitarr Migration Tasks

- name: Create sonarr4k directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - /opt/sonarr4k

- name: Create and start container
  docker_container:
    name: sonarr4k
    image: hotio/suitarr:sonarr
    pull: yes
    published_ports:
      - "8990:8989"
    env:
      VERSION: "unstable"
      PUID: "{{uid}}"
      PGID: "{{gid}}"
      BACKUP: "no"
    labels:
      traefik.enable: "true"
      traefik.backend: "sonarr4k"
      traefik.frontend.redirect.entryPoint: "https"
      traefik.frontend.rule: "Host:sonarr4k.{{domain}}"
      traefik.port: "8989"
      traefik.docker.network: "cloudbox"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/sonarr4k:/config"
      - /mnt/unionfs/Media:/data
      - "/mnt/unionfs/Media/TV Shows:/tv"
      - "/mnt:/mnt"
      - "/opt/scripts:/scripts"
      - "{{downloads.nzbs}}:/downloads/nzbs"
      - "{{downloads.torrents}}:/downloads/torrents"
    networks:
      - name: cloudbox
        aliases:
          - sonarr4k
    purge_networks: yes
    restart_policy: always
    state: started
