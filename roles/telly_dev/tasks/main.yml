#########################################################################
# Title:         Cloudbox: Telly Role                                   #
# Author(s):     EnorMOZ, Desimaniac                                    #
# URL:           https://github.com/cloudbox/cloudbox                   #
# Docker Image:  tombowditch/telly                                      #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.rocks          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Assert that all Telly related settings are filled in."
  assert:
    that:
      - (telly.streams is defined) and (telly.streams is not none) and not (telly.streams | trim == '')
      - (telly.user is defined) and (telly.user is not none) and not (telly.user | trim == '')
      - (telly.pass is defined) and (telly.pass is not none) and not (telly.pass | trim == '')
    msg: "You must specify the Telly settings in 'adv_settings.yml'"

- name: "Check if deluge exists"
  stat:
    path: "/opt/deluge/"
  register: deluge

- name: "Check if rutorrent exists"
  stat:
    path: "/opt/rutorrent/"
  register: rutorrent

- name: Set vpn fact
  set_fact:
    vpn: "deluge"
  when: (deluge.stat.exists) and (not rutorrent.stat.exists)

- name: Set vpn fact
  set_fact:
    vpn: "rutorrent"
  when: (rutorrent.stat.exists) and (not deluge.stat.exists)

- name: Stop and remove any existing container
  docker_container:
    name: telly_dev
    state: absent

- name: Create telly_dev directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - "/opt/telly_dev"

- name: Check toml file exists
  stat:
    path: "/opt/telly_dev/telly.config.toml"
  register: telly_toml

- name: Import Telly toml
  template:
    src: telly.config.toml
    dest: /opt/telly_dev/telly.config.toml
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    force: yes
  when: not telly_toml.stat.exists

- name: Create and start container
  docker_container:
    name: telly_dev
    image: tellytv/telly:dev-ffmpeg
    pull: yes
    network_mode: "container:{{vpn}}"
    env:
      TZ: "Europe/London"
      PUID: "{{uid}}"
      PGID: "{{gid}}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/telly_dev:/etc/telly"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - telly_dev
    purge_networks: yes
    restart_policy: always
    state: started
