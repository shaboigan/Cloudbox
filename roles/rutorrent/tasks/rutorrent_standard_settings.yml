#########################################################################
# Title:         Cloudbox: ruTorrent Role -  Settings Tasks             #
# Author(s):     L3uddz, Desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# Docker Image:  horjulf/rutorrent-autodl                               #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.rocks          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Wait for rtorrent.rc to be created
  wait_for:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    state: present


- name: Slurp hashed htpasswd
  slurp:
    src: "/opt/traefik/.htpasswd"
  register: hashed

- name: Set hashed password
  set_fact:
    hashed_password: "{{ hashed['content'] | b64decode }}"

- name: "Wait for 10 seconds before stopping rutorrent container"
  wait_for:
    timeout: 10

- name: Stop container to customize rtorrent.rc
  docker_container:
    name: rutorrent
    state: stopped

# Disable DHT - i.e. disables trackerless torrents.
- name: Disable DHT
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^dht.mode.set\s?=.*'
    line: 'dht.mode.set = disable'
    state: present

# Disable Peer exchange (PEX) - i.e. allows torrents marked private, only.
- name: Disable PEX
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^protocol.pex.set\s?=.*'
    line: 'protocol.pex.set = no'
    state: present

# Minimum number of peers to connect to per torrent
- name: Reduce min_peers
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^throttle.min_peers.normal.set\s?=.*'
    line: 'throttle.min_peers.normal.set = 1'
    state: present

# Maximum number of simultaneous upload slots per torrent.
- name: Increase max_uploads
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^throttle.max_uploads.set\s?=.*'
    line: 'throttle.max_uploads.set = 1024'
    state: present

# Maximum number of simultaneous downloads slots globally
- name: Set max_downloads_global to 1024
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^throttle.max_downloads.global.set\s?=.*'
    line: 'throttle.max_downloads.global.set = 1024'
    state: present

# Maximum number of simultaneous downloads and uploads slots globally
- name: Set max_uploads_global to 1024
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^throttle.max_uploads.global.set\s?=.*'
    line: 'throttle.max_uploads.global.set = 1024'
    state: present

# Global download rate in KiB
- name: Set global download_rate to unlimited
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^throttle.global_down.max_rate.set_kb\s?=.*'
    line: 'throttle.global_down.max_rate.set_kb = 0'
    state: present

# Global upload rate in KiB
- name: Set global upload_rate to unlimited
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^throttle.global_up.max_rate.set_kb\s?.*=.*'
    line: 'throttle.global_up.max_rate.set_kb = 0'
    state: present

# Maximum number of open files rtorrent can keep open.
- name: Set max_open_files to 1024
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^network.max_open_files.set\s?=.*'
    line: 'network.max_open_files.set = 1024'
    state: present

- name: Set encryption parameters
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^protocol.encryption.set\s?=*'
    line: 'protocol.encryption.set = allow_incoming,try_outgoing,enable_retry,prefer_plaintext'
    state: present

- name: Disable - Hash check.
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^pieces.hash.on_completion.set\s?=.*'
    line: 'pieces.hash.on_completion.set = no'
    state: present

# Allocate disk space
- name: Set file_allocate to no
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^system.file.allocate.set\s?=.*'
    line: 'system.file.allocate.set = 0'
    state: present

- name: Set download directory
  lineinfile:
    path: "/opt/rutorrent/rtorrent/config/rtorrent.rc"
    regexp: '^directory.default.set\s?=.*'
    line: 'directory.default.set = /downloads/rutorrent'
    state: present

# Add a line to a file if it does not exist, without passing regexp
- lineinfile:
    path: /opt/rutorrent/nginx/security/auth
    line: "{{hashed_password}}"
