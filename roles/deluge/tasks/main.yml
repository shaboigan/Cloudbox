#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare
  vars:
    subdomain: deluge

- name: Stop and remove any existing container
  docker_container:
    name: deluge
    state: absent

- name: Create deluge directory
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}} recurse=yes"
  with_items:
    - /opt/deluge
    - /opt/deluge/openvpn    
    - /opt/scripts/deluge

- name: Create new downloads directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}} recurse=yes"
  with_items:
    - "{{downloads.torrents}}/deluge"
    - "{{downloads.torrents}}/deluge/complete"
    - "{{downloads.torrents}}/deluge/incomplete"
    - "{{downloads.torrents}}/deluge/watched"
  when: (torrents_downloads_path is defined)|default(false)

- name: Check if opvn config file exists
  stat:
    path: "/opt/deluge/openvpn/config.ovpn"
  register: config_ovpn

- name: Import openvpn config file
  copy:
    src: config.ovpn
    dest: "/opt/deluge/openvpn/config.ovpn"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    force: yes
  when: not config_ovpn.stat.exists

- name: Set default_volumes variable
  set_fact:
    default_volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/deluge:/config"
      - "/opt/scripts:/scripts"
      - "/mnt:/mnt"

- name: Create and start container
  docker_container:
    name: deluge
    image: binhex/arch-delugevpn
    pull: yes
    capabilities:
      - NET_ADMIN
    published_ports:
      - "127.0.0.1:8112:8112"
      - "58846:58846"
      - "58946:58946"
      - "{{airvpn.port}}:{{airvpn.port}}"
    env:
      PUID: "{{uid}}"
      PGID: "{{gid}}"
      UMASK: "022"
      VPN_ENABLED: "yes"
      VPN_PROV: "airvpn"
      ENABLE_PRIVOXY: "no"
      ENABLE_FLOOD: "no"
      ENABLE_AUTODL_IRSSI: "yes"
      LAN_NETWORK: "172.18.0.0/16"
      NAME_SERVERS: "209.222.18.222,37.235.1.174,8.8.8.8,209.222.18.218,37.235.1.177,8.8.4.4"
      DEBUG: "false"
      PHP_TZ: "UTC"
    volumes: "{{ default_volumes + torrents_downloads_path|default([]) + old_rutorrent_downloads_path|default([]) }}"
    labels:
      traefik.enable: "true"
      traefik.backend: "deluge"
      traefik.frontend.redirect.entryPoint: "https"
      traefik.frontend.rule: "Host:deluge.{{domain}}"
      traefik.port: "8112"
      traefik.docker.network: "cloudbox"
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - deluge
    purge_networks: yes
    restart_policy: unless-stopped
    stop_timeout: 300
    state: started

- name: Stop container to customize deluge settings
  docker_container:
    name: deluge
    state: stopped

- name: Check deluge label.conf exists
  stat:
    path: "/opt/deluge/label.conf"
    get_attributes: false
    get_checksum: false
    get_md5: false
    get_mime: false
  register: deluge_settings

- name: Import deluge settings
  copy:
    src: "{{item}}"
    dest: "/opt/deluge/{{item}}"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    force: yes
  with_items:
    - "autoadd.conf"
    - "blocklist.conf"
    - "core.conf"
    - "execute.conf"
    - "label.conf"
    - "web.conf"
  when: deluge_settings.stat.exists == False

- name: Import deluge_manage.sh
  copy:
    src: "deluge_manage.sh"
    dest: "/opt/scripts/deluge/deluge_manage.sh"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    force: yes

- name: Start container to apply changes
  docker_container:
    name: deluge
    state: started
